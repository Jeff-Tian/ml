!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.LinearUnit=t():e.LinearUnit=t()}(self,(function(){return(()=>{"use strict";var e={541:(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.generateTrainingSet=t.trainingError=t.learn=t.updatedWeights=t.linearUnit=void 0;const n=r(607);t.linearUnit=(...e)=>(...t)=>n.PerceptronBase.sumProduct(e,t),t.updatedWeights=(e,t,r,n)=>{const{x:o,t:a}=n;return e.map(((e,n)=>e+(e=>r*(a-t)*o[e])(n)))},t.learn=(e,r,n)=>{const o=[];let a=e;return n.forEach(((e,n)=>{const i=t.linearUnit(...a)(...e.x),s=e.t;a=t.updatedWeights(a,i,r/(n+1),e),o.push({iter:n,weights:a,o:i,t:s,e:s-i})})),o},t.trainingError=(e,r)=>r.map((r=>Math.pow(r.t-t.linearUnit(...e)(...r.x),2))).reduce(((e,t)=>e+t),0)/2,t.generateTrainingSet=e=>new Array(e).fill(0).map((()=>{const e=[20*Math.random()-10,20*Math.random()-10];return{x:e,t:t.linearUnit(1,2)(...e)}}))},607:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.perceptron=t.Logical=t.PerceptronBase=void 0;class r{constructor(...e){this.weights=e}static sumProduct(e,t){return e.map(((e,r)=>e*t[r])).reduce(((e,t)=>e+t),0)}static convertBooleanToNumber(e){return e?1:-1}static m_of_n(e,...t){return e(t.filter((e=>!0===e)).length,t.length)}sign(...e){const[t]=e;let n=e;return"boolean"==typeof t&&(n=e.map((e=>r.convertBooleanToNumber(e)))),r.sumProduct([1,...n],this.weights)>0}}t.PerceptronBase=r;class n{static not(e){return new r(-.5,-1).sign(e)}static and(e,t){return r.m_of_n(((e,t)=>e===t),e,t)}static or(e,t){return r.m_of_n((e=>e>=1),e,t)}static xor(e,t){return n.or(n.and(e,n.not(t)),n.and(n.not(e),t))}static more_general_than_or_equal_to(...e){if(3===e.length){const[t,r,n]=e;for(const e of t)if(n(e)&&!r(e))return!1;return!0}{const[t,r]=e;return!1}}static more_general_than(...e){if(3===e.length){const[t,r,o]=e;return n.more_general_than_or_equal_to(t,r,o)&&n.not(n.more_general_than_or_equal_to(t,o,r))}if(2===e.length){const[t,r]=e;return n.more_general_than_or_equal_to(t,r)&&n.not(n.more_general_than_or_equal_to(t,r))}throw new Error("参数错误！")}}t.Logical=n,t.perceptron=(...e)=>{const t=new r(...e);return e=>t.sign.apply(t,e)}}},t={};return function r(n){if(t[n])return t[n].exports;var o=t[n]={exports:{}};return e[n](o,o.exports,r),o.exports}(541)})()}));